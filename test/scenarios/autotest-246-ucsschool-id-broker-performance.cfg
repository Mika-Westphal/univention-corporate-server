[EC2Tags]
usecase: dev-jenkins-ucs4.4

[Global]
# These settings can be overwritten by the instance
logfile: school-id-broker-performance.log

# ucs-kt-get kvm settings
kvm_server: [ENV:KVM_BUILD_SERVER]
kvm_user: [ENV:KVM_USER]
kvm_dhcp: 1
kvm_interface: eth0
kvm_extra_label: school-id-broker-performance-[ENV:UCS_VERSION]
kvm_architecture: amd64

recover: 16

environment:
 UCS_VERSION=[ENV:UCS_VERSION]
 UCS_TEST_RUN=[ENV:UCS_TEST_RUN]
 RELEASE_UPDATE=[ENV:RELEASE_UPDATE]
 ERRATA_UPDATE=[ENV:ERRATA_UPDATE]
 TARGET_VERSION=[ENV:TARGET_VERSION]
 JENKINS_WS=[ENV:JOB_URL]
 UCSSCHOOL_RELEASE=[ENV:UCSSCHOOL_RELEASE]
 JOB_NAME=[ENV:JOB_NAME]

[idbroker]
kvm_template: [ENV:KVM_TEMPLATE]
kvm_ucsversion: [ENV:KVM_UCSVERSION]
kvm_vcpus: 16
kvm_memory: 8G
profile:
 hostname="idbroker"
 domainname="test.local"
 windows/domain="TEST"
 ldap/base="dc=test,dc=local"
 root_password="univention"
 locale/default="de_DE.UTF-8:UTF-8"
 packages_install=""
 packages_remove=""
 server/role="domaincontroller_master"
command1:
 ucr set ldap/database/mdb/envflags=nosync connector/debug/level=2 umc/server/debug/level=4 umc/module/debug/level=4 connector/s4/retryrejected=2
 . utils.sh; basic_setup
 . utils.sh; add_tech_key_authorized_keys
 . utils.sh; rotate_logfiles
 env
 LOCAL env
 free -m
 cat /proc/cpuinfo
 univention-install -y ntpdate
 ntpdate -u 192.168.0.3 192.168.0.10 192.168.0.124
 ASYNC . utils.sh; upgrade_to_latest_patchlevel
command2:
 ASYNC . utils.sh; jenkins_updates
command3:
 ASYNC . utils.sh; upgrade_to_latest_test_errata && touch UCS_UPDATED
command4:
 univention-app info
 . utils.sh; assert_version "[ENV:TARGET_VERSION]" || shutdown 1 -P
 ASYNC . utils.sh; run_setup_join
command5:
 . utils.sh && do_reboot
 LOCAL sleep 120
 . utils.sh && wait_for_reboot
 . utils.sh; import_license
command6:
 # install ucsschool
 . utils.sh && wait_for_reboot
 echo -n univention > /tmp/univention
 . utils.sh; set_administrator_dn_for_ucs_test; set_administrator_password_for_ucs_test univention
 . utils.sh; install_ucsschool
 . utils.sh; run_join_scripts
 univention-app info
 ASYNC . utils.sh; prevent_ucstest_on_fail /root/schoolinstaller.py -u Administrator -p univention -M
command7:
 ASYNC . utils.sh; upgrade_to_latest_test_errata
command8:
 ASYNC . utils.sh; run_join_scripts
command9:
 # create test OUs and users
 /usr/share/ucs-school-import/scripts/create_ou "--verbose" "school1" "slave-edu1" --displayName="school 1" --sharefileserver="slave-edu1"
 /usr/share/ucs-school-import/scripts/create_ou "--verbose" "school2" "slave-edu2" --displayName="School 2" --sharefileserver="slave-edu2"
 cp -v /usr/share/ucs-school-import/configs/ucs-school-testuser-import.json /var/lib/ucs-school-import/configs/user_import.json
 /usr/share/ucs-school-import/scripts/ucs-school-testuser-import --verbose --classes 3 --staff 3 --students 3 --teachers 3 --staffteachers 3 DEMOSCHOOL school1 school2
command10:
 # setup Kelvin REST API
 . utils-school.sh && install_kelvin_api
 . utils.sh; run_join_scripts
command11:
 # setup ucschool-apis
 . utils.sh && switch_to_test_app_center || true
 . utils.sh; install_apps ucsschool-apis
 . utils.sh; run_join_scripts
command12:
 # setup id-broker-plugin
 echo 'deb [trusted=yes] http://omar.knut.univention.de/build2/ ucs_4.4-0-id-broker/all/' >> /etc/apt/sources.list.d/40_id-broker.list
 univention-install -y id-broker-plugin
 . utils.sh; run_join_scripts
command13:
 udm users/user create --position "cn=users,$(ucr get ldap/base)" --set username=id-broker-admin --set firstname="ID Broker" --set lastname="Admin User" --set password=univention
 udm users/user create --position "cn=users,$(ucr get ldap/base)" --set username=id-broker-kelvin-user --set firstname="ID Broker" --set lastname="Kelvin User" --set password=univention --append "groups=cn=ucsschool-kelvin-rest-api-admins,cn=groups,$(ucr get ldap/base)"
 echo '{ "mapped_udm_properties": ["brokerID"] }' > /var/lib/ucs-school-import/configs/kelvin.json
 cat /var/lib/ucs-school-import/configs/kelvin.json
 univention-app shell ucsschool-kelvin-rest-api /etc/init.d/ucsschool-kelvin-rest-api restart
 sleep 10
 curl -i -k -X POST https://127.0.0.1/ucsschool/kelvin/token -H "Content-Type:application/x-www-form-urlencoded" -d "username=id-broker-kelvin-user" -d "password=univention"; echo
 echo '{ "host": "[idbroker_IP]", "username": "id-broker-kelvin-user", "password": "univention", "verify_ssl": false }' > /etc/ucsschool/apis/id_broker/settings.json
 cat /etc/ucsschool/apis/id_broker/settings.json
 univention-app restart ucsschool-apis
 sleep 10
 curl -i -k -X POST https://[idbroker_IP]/ucsschool/apis/auth/token -H "Content-Type:application/x-www-form-urlencoded" -d "username=id-broker-admin" -d "password=univention"; echo
command14:
 for I in $(seq -w 20); do /usr/share/ucs-school-import/scripts/create_ou "Schule$I"; done
 wget --no-check-certificate https://billy.knut.univention.de/~dtroeder/id-broker/id_broker_hook.py -O /usr/share/ucs-school-import/pyhooks/id_broker_hook.py
 /usr/share/ucs-school-import/scripts/ucs-school-testuser-import --students 10000 --classes 500 --schools 2 Schule01 Schule02 Schule03 Schule04 Schule05 Schule06 Schule07 Schule08 Schule09 Schule10 Schule11 Schule12 Schule13 Schule14 Schule15 Schule16 Schule17 Schule18 Schule19 Schule20
 # let system settle:
 sleep 240
command15:
 # run tests on locust host
command16:
 . utils.sh && prepare_results
 LOCAL utils/utils-local.sh fetch-results [idbroker_IP] idbroker
files:
 ~/ec2/license/license.secret /etc/
 ~/ec2/scripts/activate-errata-test-scope.sh /root/
 utils/utils-school.sh /root/


[locust]
kvm_template: ubuntu-desktop
kvm_ucsversion: 20.04
kvm_operating_system: Others
kvm_vcpus: 4
kvm_memory: 4G
command1:
 lsb_release -a
 free -m
 cat /proc/cpuinfo
 env
 LOCAL env
 pkcon get-updates
 pkcon --noninteractive --verbose install ntpdate
 ntpdate -u 192.168.0.3 192.168.0.10 192.168.0.124
command2:
 # fetch Locust job files
 # TODO: learn how to use git in Jenkins
 wget --no-check-certificate https://billy.knut.univention.de/~dtroeder/id-broker/locust_idbroker_user.py https://billy.knut.univention.de/~dtroeder/id-broker/locust_ucsschool_api_common.py https://billy.knut.univention.de/~dtroeder/id-broker/locust_ucsschool_api_echo.py https://billy.knut.univention.de/~dtroeder/id-broker/locust_udm_user_get.py https://billy.knut.univention.de/~dtroeder/id-broker/locust_udm_user_search.py
command3:
 # install Locust
 pkcon --noninteractive --verbose install python3-venv
 python3 -m venv venv_locust
 venv_locust/bin/pip install -U pip wheel
 venv_locust/bin/pip install locust ldap3 PyJWT
 venv_locust/bin/locust --version
command4:
 echo 'root soft nofile 10240' >> /etc/security/limits.conf
 echo 'root hard nofile 10240' >> /etc/security/limits.conf
 echo "fs.file-max=1048576" > /etc/sysctl.d/99-file-max.conf
 sysctl -p
command6:
 #
command7:
 #
command8:
 #
command9:
 #
command10:
 #
command11:
 # setup ucschool-apis on server
command12:
 # setup id-broker-plugin on server
command13:
 # configure kelvin and ucschool-apis on server
command14:
 # create users on server
command15:
 curl -i -k -X POST https://[idbroker_IP]/ucsschool/apis/auth/token -H "Content-Type:application/x-www-form-urlencoded" -d "username=id-broker-admin" -d "password=univention"; echo
 LDAP_SERVER="[idbroker_IP]" LDAP_BASE="dc=test,dc=local" venv_locust/bin/locust --locustfile locust_idbroker_user.py --host "[idbroker_IP]" --headless --users 16 --spawn-rate 1 --run-time 10m --stop-timeout 60 --csv=idbroker_user --html=idbroker_user.html --print-stats --exit-code-on-error 0
 pwd
 find
command16:
 . utils.sh && prepare_results
 LOCAL utils/utils-local.sh fetch-results [locust_IP] locust
 LOCAL utils/utils-local.sh fetch-files "root@[locust_IP]" 'idbroker_user*.csv' locust
 LOCAL utils/utils-local.sh fetch-files "root@[locust_IP]" idbroker_user.html locust
files:
 ~/ec2/license/license.secret /etc/
 ~/ec2/scripts/activate-errata-test-scope.sh /root/
