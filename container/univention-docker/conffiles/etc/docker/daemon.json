@!@
import json
from ipaddress import ip_interface

conf = {
	"log-opts": {
		"max-file": configRegistry["docker/daemon/default/opts/max-file"],
		"max-size": configRegistry["docker/daemon/default/opts/max-size"],
	},
	"bip": configRegistry["docker/daemon/default/opts/bip"],
	"log-driver": configRegistry["docker/daemon/default/opts/log-driver"],
	"live-restore": configRegistry.is_true("docker/daemon/default/parameter/live-restore"),
}

try:
	bip = ip_interface(u"%(docker/daemon/default/opts/bip)s" % configRegistry).ip

	variables = ("nameserver%d" % i for i in range(1, 4))
	values = (configRegistry[var] for var in variables)
	interfaces = (ip_interface(u"%s" % value ) for value in values if value)
	dns = [bip if net.is_private else net.ip for net in interfaces]
	if bip in dns:
		conf["dns"] = [str(ip) for ip in dns]
except ValueError:
	pass

registry_mirrors = configRegistry.get('docker/daemon/default/opts/registry-mirrors')
if registry_mirrors:
	conf.update({"registry-mirrors": [mirror.strip() for mirror in registry_mirrors.split(',')]})

tmpl = configRegistry.get("docker/daemon/default/json", "{}")
extra = json.loads(tmpl)
conf.update(extra)

text = json.dumps(conf, indent=4, sort_keys=True)
print(text)
@!@
